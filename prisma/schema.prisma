generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DocumentType {
  affidavit
  certification
  verification
}

enum Jurisdiction {
  federal
  nj
}

enum DocumentStatus {
  draft
  final
  filed
}

enum ExhibitType {
  document
  image
  video
  other
}

model Document {
  id                        String         @id @default(cuid())
  type                      DocumentType
  jurisdiction              Jurisdiction
  status                    DocumentStatus @default(draft)
  
  // Case Information
  caseCaption               String
  caseNumber                String
  court                     String
  judge                     String?
  division                  String?
  
  // Declarant Information
  declarantName             String
  declarantTitle            String?
  declarantOrganization     String?
  declarantAddress          String?
  
  // Content
  personalKnowledgeStatement String?
  
  // Signature Block
  signatureDate             DateTime?
  signatureLocation         String?
  notaryRequired            Boolean        @default(false)
  
  // Attorney Information
  attorneyName              String?
  attorneyBarNumber         String?
  attorneyFirm              String?
  attorneyPhone             String?
  attorneyEmail             String?
  
  // Metadata
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt
  
  // Relations
  paragraphs                Paragraph[]
  exhibits                  Exhibit[]
  
  @@index([caseNumber])
  @@index([status])
}

model Paragraph {
  id            String   @id @default(cuid())
  documentId    String
  number        Int
  content       String   @db.Text
  
  document      Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  // References to exhibits in this paragraph
  exhibitReferences String[]
  
  @@unique([documentId, number])
  @@index([documentId])
}

model Exhibit {
  id            String      @id @default(cuid())
  documentId    String
  label         String      // A, B, C, ... AA, AB, etc.
  description   String
  type          ExhibitType
  isConfidential Boolean    @default(false)
  attachmentPath String?    // Path to uploaded file
  
  document      Document    @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  @@unique([documentId, label])
  @@index([documentId])
}

model Template {
  id            String       @id @default(cuid())
  name          String
  description   String?
  type          DocumentType
  jurisdiction  Jurisdiction
  category      String?      // e.g., "summary judgment", "discovery", etc.
  isPublic      Boolean      @default(true)
  
  // Template content (JSON)
  content       Json         // Stores partial document data
  
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  
  @@index([type, jurisdiction])
  @@index([category])
}